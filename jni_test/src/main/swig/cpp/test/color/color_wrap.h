/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (https://www.swig.org).
 * Version 4.3.0
 *
 * Do not make changes to this file unless you know what you are doing - modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

#ifndef SWIG_ColorModule_WRAP_H_
#define SWIG_ColorModule_WRAP_H_

class SwigDirector_ITestColor : public ITestColor, public Swig::Director {

public:
    void swig_connect_director(JNIEnv *jenv, jobject jself, jclass jcls, bool swig_mem_own, bool weak_global);
    SwigDirector_ITestColor(JNIEnv *jenv);
    virtual ~SwigDirector_ITestColor();
    virtual int getRandomColor();
    virtual std::string add(std::string a,std::string b);
public:
    bool swig_overrides(int n) {
      return (n < 2 ? swig_override[n] : false);
    }
protected:
    Swig::BoolArray<2> swig_override;
};

class SwigDirector_N2CTestColor : public N2CTestColor, public Swig::Director {

public:
    void swig_connect_director(JNIEnv *jenv, jobject jself, jclass jcls, bool swig_mem_own, bool weak_global);
    SwigDirector_N2CTestColor(JNIEnv *jenv);
    virtual ~SwigDirector_N2CTestColor();
    virtual int getRandomColor();
    virtual std::string add(std::string a,std::string b);
public:
    bool swig_overrides(int n) {
      return (n < 2 ? swig_override[n] : false);
    }
protected:
    Swig::BoolArray<2> swig_override;
};


#endif
