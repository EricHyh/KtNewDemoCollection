/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (https://www.swig.org).
 * Version 4.3.0
 *
 * Do not make changes to this file unless you know what you are doing - modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

#ifndef SWIG_FieldModule_WRAP_H_
#define SWIG_FieldModule_WRAP_H_

class SwigDirector_IntLiveDataObserver : public IntLiveDataObserver, public Swig::Director {

public:
    void swig_connect_director(JNIEnv *jenv, jobject jself, jclass jcls, bool swig_mem_own, bool weak_global);
    SwigDirector_IntLiveDataObserver(JNIEnv *jenv);
    virtual ~SwigDirector_IntLiveDataObserver();
    virtual void onCall(int const &value);
public:
    bool swig_overrides(int n) {
      return (n < 1 ? swig_override[n] : false);
    }
protected:
    Swig::BoolArray<1> swig_override;
};

class SwigDirector_StringLiveDataObserver : public StringLiveDataObserver, public Swig::Director {

public:
    void swig_connect_director(JNIEnv *jenv, jobject jself, jclass jcls, bool swig_mem_own, bool weak_global);
    SwigDirector_StringLiveDataObserver(JNIEnv *jenv);
    virtual ~SwigDirector_StringLiveDataObserver();
    virtual void onCall(std::string const &value);
public:
    bool swig_overrides(int n) {
      return (n < 1 ? swig_override[n] : false);
    }
protected:
    Swig::BoolArray<1> swig_override;
};

class SwigDirector_OptionalStringLiveDataObserver : public OptionalStringLiveDataObserver, public Swig::Director {

public:
    void swig_connect_director(JNIEnv *jenv, jobject jself, jclass jcls, bool swig_mem_own, bool weak_global);
    SwigDirector_OptionalStringLiveDataObserver(JNIEnv *jenv);
    virtual ~SwigDirector_OptionalStringLiveDataObserver();
    virtual void onCall(std::optional< std::string > const &value);
public:
    bool swig_overrides(int n) {
      return (n < 1 ? swig_override[n] : false);
    }
protected:
    Swig::BoolArray<1> swig_override;
};


#endif
