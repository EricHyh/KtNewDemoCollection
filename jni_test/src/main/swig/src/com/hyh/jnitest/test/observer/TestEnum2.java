/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (https://www.swig.org).
 * Version 4.3.0
 *
 * Do not make changes to this file unless you know what you are doing - modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */


package com.hyh.jnitest.test.observer;




public enum TestEnum2 {
  AllTradingTime(com.hyh.jnitest.test.observer.ObserverModuleJNI.TestEnum2_AllTradingTime_get()),
  UsPreMarketAfter(com.hyh.jnitest.test.observer.ObserverModuleJNI.TestEnum2_UsPreMarketAfter_get());

  public final int swigValue() {
    return swigValue;
  }

  public static TestEnum2 swigToEnum(int swigValue) {
    TestEnum2[] swigValues = TestEnum2.class.getEnumConstants();
    if (swigValue < swigValues.length && swigValue >= 0 && swigValues[swigValue].swigValue == swigValue)
      return swigValues[swigValue];
    for (TestEnum2 swigEnum : swigValues)
      if (swigEnum.swigValue == swigValue)
        return swigEnum;
    throw new IllegalArgumentException("No enum " + TestEnum2.class + " with value " + swigValue);
  }

  @SuppressWarnings("unused")
  private TestEnum2() {
    this.swigValue = SwigNext.next++;
  }

  @SuppressWarnings("unused")
  private TestEnum2(int swigValue) {
    this.swigValue = swigValue;
    SwigNext.next = swigValue+1;
  }

  @SuppressWarnings("unused")
  private TestEnum2(TestEnum2 swigEnum) {
    this.swigValue = swigEnum.swigValue;
    SwigNext.next = this.swigValue+1;
  }

  private final int swigValue;

  private static class SwigNext {
    private static int next = 0;
  }
}

